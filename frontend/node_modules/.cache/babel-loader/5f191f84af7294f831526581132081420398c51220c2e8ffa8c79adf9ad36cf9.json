{"ast":null,"code":"var _jsxFileName = \"/Users/manasam/Desktop/project_managment-1/frontend/src/components/Student/SDiscussions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { handleSuccess } from '../../utils';\nimport Sidebar from './SSidebar';\nimport Header from './SHeader';\n// import '../../css/StudentCss/StudentDashboardLayout.css';\nimport '../../css/StudentCss/sDiscussions.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SDiscussions = () => {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const navigate = useNavigate();\n\n  // State for contacts/messages\n  const [contacts, setContacts] = useState([{\n    id: 1,\n    name: 'Lio',\n    email: 'lio@example.com',\n    avatar: '/avatars/lio.jpg',\n    messages: []\n  }, {\n    id: 2,\n    name: 'Mrs. Jane',\n    email: 'jane@example.com',\n    avatar: '/avatars/jane.jpg',\n    messages: []\n  }, {\n    id: 3,\n    name: 'Doe',\n    email: 'doe@example.com',\n    avatar: '/avatars/doe.jpg',\n    messages: []\n  }, {\n    id: 4,\n    name: 'Mrs.Melisa',\n    email: 'melisa@example.com',\n    avatar: '/avatars/melisa.jpg',\n    messages: []\n  }]);\n\n  // State for new contact form\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\n  const [newContactEmail, setNewContactEmail] = useState('');\n  const [newContactName, setNewContactName] = useState('');\n\n  // State for selected contact\n  const [selectedContactId, setSelectedContactId] = useState(null);\n\n  // State for message input\n  const [messageInput, setMessageInput] = useState('');\n  useEffect(() => {\n    const userData = localStorage.getItem('loggedInUser');\n    if (userData) {\n      setLoggedInUser(JSON.parse(userData));\n    }\n  }, []);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('loggedInUser');\n    handleSuccess('User Loggedout');\n    setTimeout(() => {\n      navigate('/login');\n    }, 1000);\n  };\n\n  // Get selected contact\n  const selectedContact = contacts.find(contact => contact.id === selectedContactId);\n\n  // Handle sending a message\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!messageInput.trim() || !selectedContactId) return;\n\n    // Create new message\n    const newMessage = {\n      id: Date.now(),\n      text: messageInput,\n      sender: 'me',\n      timestamp: new Date().toISOString()\n    };\n\n    // Update contact's messages\n    setContacts(contacts.map(contact => {\n      if (contact.id === selectedContactId) {\n        return {\n          ...contact,\n          messages: [...contact.messages, newMessage]\n        };\n      }\n      return contact;\n    }));\n\n    // Clear input\n    setMessageInput('');\n\n    // Simulate a reply after a short delay\n    setTimeout(() => {\n      const replyMessage = {\n        id: Date.now() + 1,\n        text: `This is a reply from ${selectedContact.name}`,\n        sender: selectedContact.id,\n        timestamp: new Date().toISOString()\n      };\n      setContacts(prevContacts => prevContacts.map(contact => {\n        if (contact.id === selectedContactId) {\n          return {\n            ...contact,\n            messages: [...contact.messages, replyMessage]\n          };\n        }\n        return contact;\n      }));\n    }, 1000);\n  };\n\n  // Handle adding a new contact\n  const handleAddContact = e => {\n    e.preventDefault();\n    if (!newContactEmail.trim() || !newContactName.trim()) {\n      alert('Please enter both name and email');\n      return;\n    }\n\n    // Create new contact\n    const newContact = {\n      id: contacts.length + 1,\n      name: newContactName,\n      email: newContactEmail,\n      avatar: '/avatars/default.jpg',\n      // Default avatar\n      messages: []\n    };\n\n    // Add to contacts\n    setContacts([...contacts, newContact]);\n\n    // Reset form\n    setNewContactEmail('');\n    setNewContactName('');\n    setShowNewContactForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-contact-button\",\n              onClick: () => setShowNewContactForm(true),\n              children: \"+ New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), showNewContactForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-contact-form\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleAddContact,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: newContactName,\n                onChange: e => setNewContactName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: newContactEmail,\n                onChange: e => setNewContactEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setShowNewContactForm(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-list\",\n            children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `contact-item ${selectedContactId === contact.id ? 'selected' : ''}`,\n              onClick: () => setSelectedContactId(contact.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: contact.avatar,\n                  alt: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: contact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)]\n            }, contact.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-area\",\n          children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: selectedContact.avatar,\n                  alt: selectedContact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: selectedContact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: selectedContact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-container\",\n              children: selectedContact.messages.length > 0 ? selectedContact.messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${message.sender === 'me' ? 'sent' : 'received'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-bubble\",\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-time\",\n                  children: new Date(message.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 25\n                }, this)]\n              }, message.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-messages\",\n                children: [\"Start a conversation with \", selectedContact.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"message-input-form\",\n              onSubmit: handleSendMessage,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Type a message...\",\n                value: messageInput,\n                onChange: e => setMessageInput(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-contact-selected\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"placeholder-message\",\n              children: \"Select a contact to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(SDiscussions, \"pMG+H7z5bTAx/ZOBVSL2MaKRqQI=\", false, function () {\n  return [useNavigate];\n});\n_c = SDiscussions;\nexport default SDiscussions;\nvar _c;\n$RefreshReg$(_c, \"SDiscussions\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ToastContainer","useNavigate","handleSuccess","Sidebar","Header","io","jsxDEV","_jsxDEV","Fragment","_Fragment","SDiscussions","_s","loggedInUser","setLoggedInUser","navigate","contacts","setContacts","id","name","email","avatar","messages","showNewContactForm","setShowNewContactForm","newContactEmail","setNewContactEmail","newContactName","setNewContactName","selectedContactId","setSelectedContactId","messageInput","setMessageInput","userData","localStorage","getItem","JSON","parse","handleLogout","removeItem","setTimeout","selectedContact","find","contact","handleSendMessage","e","preventDefault","trim","newMessage","Date","now","text","sender","timestamp","toISOString","map","replyMessage","prevContacts","handleAddContact","alert","newContact","length","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","required","src","alt","message","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["/Users/manasam/Desktop/project_managment-1/frontend/src/components/Student/SDiscussions.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleSuccess } from '../../utils';\r\nimport Sidebar from './SSidebar';\r\nimport Header from './SHeader';\r\n// import '../../css/StudentCss/StudentDashboardLayout.css';\r\nimport '../../css/StudentCss/sDiscussions.css';\r\nimport io from 'socket.io-client';\r\n\r\nconst SDiscussions = () => {\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  \r\n  // State for contacts/messages\r\n  const [contacts, setContacts] = useState([\r\n    { id: 1, name: 'Lio', email: 'lio@example.com', avatar: '/avatars/lio.jpg', messages: [] },\r\n    { id: 2, name: 'Mrs. Jane', email: 'jane@example.com', avatar: '/avatars/jane.jpg', messages: [] },\r\n    { id: 3, name: 'Doe', email: 'doe@example.com', avatar: '/avatars/doe.jpg', messages: [] },\r\n    { id: 4, name: 'Mrs.Melisa', email: 'melisa@example.com', avatar: '/avatars/melisa.jpg', messages: [] }\r\n  ]);\r\n  \r\n  // State for new contact form\r\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\r\n  const [newContactEmail, setNewContactEmail] = useState('');\r\n  const [newContactName, setNewContactName] = useState('');\r\n  \r\n  // State for selected contact\r\n  const [selectedContactId, setSelectedContactId] = useState(null);\r\n  \r\n  // State for message input\r\n  const [messageInput, setMessageInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    const userData = localStorage.getItem('loggedInUser');\r\n    if (userData) {\r\n      setLoggedInUser(JSON.parse(userData));\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('loggedInUser');\r\n    handleSuccess('User Loggedout');\r\n    setTimeout(() => {\r\n      navigate('/login');\r\n    }, 1000);\r\n  };\r\n  \r\n  // Get selected contact\r\n  const selectedContact = contacts.find(contact => contact.id === selectedContactId);\r\n  \r\n  // Handle sending a message\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!messageInput.trim() || !selectedContactId) return;\r\n    \r\n    // Create new message\r\n    const newMessage = {\r\n      id: Date.now(),\r\n      text: messageInput,\r\n      sender: 'me',\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    // Update contact's messages\r\n    setContacts(contacts.map(contact => {\r\n      if (contact.id === selectedContactId) {\r\n        return {\r\n          ...contact,\r\n          messages: [...contact.messages, newMessage]\r\n        };\r\n      }\r\n      return contact;\r\n    }));\r\n    \r\n    // Clear input\r\n    setMessageInput('');\r\n    \r\n    // Simulate a reply after a short delay\r\n    setTimeout(() => {\r\n      const replyMessage = {\r\n        id: Date.now() + 1,\r\n        text: `This is a reply from ${selectedContact.name}`,\r\n        sender: selectedContact.id,\r\n        timestamp: new Date().toISOString()\r\n      };\r\n      \r\n      setContacts(prevContacts => prevContacts.map(contact => {\r\n        if (contact.id === selectedContactId) {\r\n          return {\r\n            ...contact,\r\n            messages: [...contact.messages, replyMessage]\r\n          };\r\n        }\r\n        return contact;\r\n      }));\r\n    }, 1000);\r\n  };\r\n  \r\n  // Handle adding a new contact\r\n  const handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newContactEmail.trim() || !newContactName.trim()) {\r\n      alert('Please enter both name and email');\r\n      return;\r\n    }\r\n    \r\n    // Create new contact\r\n    const newContact = {\r\n      id: contacts.length + 1,\r\n      name: newContactName,\r\n      email: newContactEmail,\r\n      avatar: '/avatars/default.jpg', // Default avatar\r\n      messages: []\r\n    };\r\n    \r\n    // Add to contacts\r\n    setContacts([...contacts, newContact]);\r\n    \r\n    // Reset form\r\n    setNewContactEmail('');\r\n    setNewContactName('');\r\n    setShowNewContactForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-dashboard-container\">\r\n      <Sidebar onLogout={handleLogout} />\r\n      <div className=\"content-area\">\r\n        <h1>Welcome, {loggedInUser?.name}</h1>\r\n        <div className=\"chat-layout\">\r\n          {/* Contacts List */}\r\n          <div className=\"contacts-panel\">\r\n            <div className=\"contacts-header\">\r\n              <h2>Messages</h2>\r\n              <button \r\n                className=\"add-contact-button\"\r\n                onClick={() => setShowNewContactForm(true)}\r\n              >\r\n                + New Chat\r\n              </button>\r\n            </div>\r\n            \r\n            {/* New Contact Form */}\r\n            {showNewContactForm && (\r\n              <div className=\"new-contact-form\">\r\n                <form onSubmit={handleAddContact}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    value={newContactName}\r\n                    onChange={(e) => setNewContactName(e.target.value)}\r\n                    required\r\n                  />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={newContactEmail}\r\n                    onChange={(e) => setNewContactEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                  <div className=\"form-buttons\">\r\n                    <button type=\"submit\">Add</button>\r\n                    <button \r\n                      type=\"button\" \r\n                      onClick={() => setShowNewContactForm(false)}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Contacts List */}\r\n            <div className=\"contacts-list\">\r\n              {contacts.map(contact => (\r\n                <div \r\n                  key={contact.id}\r\n                  className={`contact-item ${selectedContactId === contact.id ? 'selected' : ''}`}\r\n                  onClick={() => setSelectedContactId(contact.id)}\r\n                >\r\n                  <div className=\"contact-avatar\">\r\n                    <img src={contact.avatar} alt={contact.name} />\r\n                  </div>\r\n                  <div className=\"contact-info\">\r\n                    <div className=\"contact-name\">{contact.name}</div>\r\n                    <div className=\"contact-email\">{contact.email}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Chat Area */}\r\n          <div className=\"chat-area\">\r\n            {selectedContact ? (\r\n              <>\r\n                <div className=\"chat-header\">\r\n                  <div className=\"contact-avatar\">\r\n                    <img src={selectedContact.avatar} alt={selectedContact.name} />\r\n                  </div>\r\n                  <div className=\"contact-info\">\r\n                    <div className=\"contact-name\">{selectedContact.name}</div>\r\n                    <div className=\"contact-email\">{selectedContact.email}</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"messages-container\">\r\n                  {selectedContact.messages.length > 0 ? (\r\n                    selectedContact.messages.map(message => (\r\n                      <div \r\n                        key={message.id}\r\n                        className={`message ${message.sender === 'me' ? 'sent' : 'received'}`}\r\n                      >\r\n                        <div className=\"message-bubble\">\r\n                          {message.text}\r\n                        </div>\r\n                        <div className=\"message-time\">\r\n                          {new Date(message.timestamp).toLocaleTimeString([], {\r\n                            hour: '2-digit',\r\n                            minute: '2-digit'\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"no-messages\">\r\n                      Start a conversation with {selectedContact.name}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={messageInput}\r\n                    onChange={(e) => setMessageInput(e.target.value)}\r\n                  />\r\n                  <button type=\"submit\">Send</button>\r\n                </form>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-contact-selected\">\r\n                <div className=\"placeholder-message\">\r\n                  Select a contact to start chatting\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SDiscussions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}