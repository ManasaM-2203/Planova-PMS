{"ast":null,"code":"var _jsxFileName = \"/Users/manasam/Desktop/project_managment-1/frontend/src/components/Student/SDiscussions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useNavigate } from 'react-router-dom';\nimport { handleSuccess } from '../../utils';\nimport Sidebar from './SSidebar';\nimport Header from './SHeader';\n// import '../../css/StudentCss/StudentDashboardLayout.css';\nimport '../../css/StudentCss/sDiscussions.css';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SDiscussions = () => {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const navigate = useNavigate();\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n\n  // State for contacts/messages\n  const [contacts, setContacts] = useState([]);\n  const [discussions, setDiscussions] = useState({});\n\n  // State for new contact form\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\n  const [newContactEmail, setNewContactEmail] = useState('');\n  const [newContactName, setNewContactName] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const searchTimeoutRef = useRef(null);\n\n  // State for selected contact and messages\n  const [selectedContactId, setSelectedContactId] = useState(null);\n  const [currentDiscussionId, setCurrentDiscussionId] = useState(null);\n  const [messageInput, setMessageInput] = useState('');\n\n  // Auto scroll to bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [discussions, selectedContactId]);\n\n  // Function to search users\n  const searchUsers = async query => {\n    try {\n      setIsSearching(true);\n      console.log('Starting search with query:', query);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No token found');\n        toast.error('Please login again');\n        navigate('/login');\n        return;\n      }\n      const response = await axios.get(`http://localhost:8000/api/student/search-users?query=${encodeURIComponent(query)}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        withCredentials: true\n      });\n      if (Array.isArray(response.data)) {\n        setSearchResults(response.data);\n        setShowSuggestions(true);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Search error:', error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error searching users');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  // Handle input change with debounce\n  const handleInputChange = (e, field) => {\n    const value = e.target.value;\n    if (field === 'name') {\n      setNewContactName(value);\n    } else {\n      setNewContactEmail(value);\n    }\n\n    // Clear previous timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout for search\n    if (value.trim().length >= 2) {\n      searchTimeoutRef.current = setTimeout(() => {\n        searchUsers(value);\n      }, 300);\n    } else {\n      setSearchResults([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  // Handle suggestion selection\n  const handleSelectSuggestion = user => {\n    setNewContactName(user.name);\n    setNewContactEmail(user.email);\n    setShowSuggestions(false);\n    setSearchResults([]);\n    handleContactSelect(user._id); // Immediately start chat with selected user\n    setShowNewContactForm(false); // Close the form after selection\n  };\n\n  // Click outside handler to close suggestions\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (!event.target.closest('.input-container')) {\n        setShowSuggestions(false);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    const userData = localStorage.getItem('loggedInUser');\n    if (userData) {\n      const user = JSON.parse(userData);\n      setLoggedInUser(user);\n\n      // Connect to Socket.IO server\n      socketRef.current = io('http://localhost:5000');\n\n      // Register user\n      socketRef.current.emit('register', {\n        userId: user._id,\n        name: user.name,\n        email: user.email\n      });\n\n      // Listen for user list updates\n      socketRef.current.on('userList', users => {\n        const filteredUsers = users.filter(u => u.userId !== user._id);\n        setContacts(filteredUsers);\n      });\n\n      // Listen for chat initialization\n      socketRef.current.on('chatInitialized', ({\n        discussionId,\n        messages\n      }) => {\n        setDiscussions(prev => ({\n          ...prev,\n          [discussionId]: messages\n        }));\n        setCurrentDiscussionId(discussionId);\n      });\n\n      // Listen for incoming messages\n      socketRef.current.on('receiveMessage', ({\n        discussionId,\n        message\n      }) => {\n        setDiscussions(prev => ({\n          ...prev,\n          [discussionId]: [...(prev[discussionId] || []), message]\n        }));\n      });\n\n      // Listen for sent message confirmation\n      socketRef.current.on('messageSent', ({\n        discussionId,\n        message\n      }) => {\n        setDiscussions(prev => ({\n          ...prev,\n          [discussionId]: [...(prev[discussionId] || []), message]\n        }));\n        setMessageInput('');\n      });\n\n      // Listen for chat history\n      socketRef.current.on('chatHistory', ({\n        discussionId,\n        messages\n      }) => {\n        if (discussionId) {\n          setDiscussions(prev => ({\n            ...prev,\n            [discussionId]: messages\n          }));\n          setCurrentDiscussionId(discussionId);\n        }\n      });\n      return () => {\n        if (socketRef.current) {\n          socketRef.current.disconnect();\n        }\n      };\n    }\n  }, []);\n  const handleLogout = () => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    localStorage.removeItem('token');\n    localStorage.removeItem('loggedInUser');\n    handleSuccess('User Logged out');\n    setTimeout(() => {\n      navigate('/login');\n    }, 1000);\n  };\n\n  // Get current discussion messages\n  const currentMessages = currentDiscussionId ? discussions[currentDiscussionId] || [] : [];\n  const selectedContact = contacts.find(c => c.userId === selectedContactId);\n  const handleContactSelect = contactId => {\n    setSelectedContactId(contactId);\n    if (loggedInUser && contactId) {\n      socketRef.current.emit('initializeChat', {\n        userId: loggedInUser._id,\n        targetUserId: contactId\n      });\n    }\n  };\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!messageInput.trim() || !selectedContactId || !currentDiscussionId) return;\n    const selectedContact = contacts.find(c => c.userId === selectedContactId);\n    if (!selectedContact) return;\n    socketRef.current.emit('sendMessage', {\n      discussionId: currentDiscussionId,\n      from: {\n        userId: loggedInUser._id,\n        name: loggedInUser.name,\n        email: loggedInUser.email\n      },\n      to: {\n        userId: selectedContact.userId,\n        name: selectedContact.name,\n        email: selectedContact.email\n      },\n      content: messageInput\n    });\n  };\n\n  // Handle adding a new contact\n  const handleAddContact = e => {\n    e.preventDefault();\n    if (!newContactEmail.trim() || !newContactName.trim()) {\n      alert('Please enter both name and email');\n      return;\n    }\n\n    // Reset form\n    setNewContactEmail('');\n    setNewContactName('');\n    setShowSuggestions(false);\n    setShowNewContactForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-contact-button\",\n              onClick: () => setShowNewContactForm(true),\n              children: \"+ New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), showNewContactForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-contact-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Search by name or email...\",\n                value: newContactName,\n                onChange: e => handleInputChange(e, 'name')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-loading\",\n                children: \"Searching...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 35\n              }, this), showSuggestions && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"suggestions-list\",\n                children: searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggestion-item\",\n                  onClick: () => handleSelectSuggestion(user),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggestion-name\",\n                    children: user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggestion-email\",\n                    children: user.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 27\n                  }, this)]\n                }, user._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this), showSuggestions && searchResults.length === 0 && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-results\",\n                children: \"No users found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-buttons\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  setShowNewContactForm(false);\n                  setShowSuggestions(false);\n                  setSearchResults([]);\n                  setNewContactName('');\n                  setNewContactEmail('');\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-list\",\n            children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `contact-item ${selectedContactId === contact.userId ? 'selected' : ''}`,\n              onClick: () => handleContactSelect(contact.userId),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://ui-avatars.com/api/?name=${encodeURIComponent(contact.name)}&background=random`,\n                  alt: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: contact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)]\n            }, contact.userId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-area\",\n          children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `https://ui-avatars.com/api/?name=${encodeURIComponent(selectedContact.name)}&background=random`,\n                  alt: selectedContact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: selectedContact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: selectedContact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-container\",\n              children: [currentMessages.length > 0 ? currentMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${message.sender === (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser._id) ? 'sent' : 'received'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-bubble\",\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-time\",\n                  children: new Date(message.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-messages\",\n                children: [\"Start a conversation with \", selectedContact.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: messagesEndRef\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"message-input-form\",\n              onSubmit: handleSendMessage,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Type a message...\",\n                value: messageInput,\n                onChange: e => setMessageInput(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-contact-selected\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"placeholder-message\",\n              children: \"Select a contact to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(SDiscussions, \"2uOkW+PSN5UBf4HcAOQ5SeNAk3M=\", false, function () {\n  return [useNavigate];\n});\n_c = SDiscussions;\nexport default SDiscussions;\nvar _c;\n$RefreshReg$(_c, \"SDiscussions\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ToastContainer","toast","useNavigate","handleSuccess","Sidebar","Header","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SDiscussions","_s","loggedInUser","setLoggedInUser","navigate","socketRef","messagesEndRef","contacts","setContacts","discussions","setDiscussions","showNewContactForm","setShowNewContactForm","newContactEmail","setNewContactEmail","newContactName","setNewContactName","searchResults","setSearchResults","showSuggestions","setShowSuggestions","isSearching","setIsSearching","searchTimeoutRef","selectedContactId","setSelectedContactId","currentDiscussionId","setCurrentDiscussionId","messageInput","setMessageInput","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","searchUsers","query","console","log","token","localStorage","getItem","error","response","get","encodeURIComponent","headers","withCredentials","Array","isArray","data","_error$response","_error$response$data","message","handleInputChange","e","field","value","target","clearTimeout","trim","length","setTimeout","handleSelectSuggestion","user","name","email","handleContactSelect","_id","handleClickOutside","event","closest","document","addEventListener","removeEventListener","userData","JSON","parse","emit","userId","on","users","filteredUsers","filter","u","discussionId","messages","prev","disconnect","handleLogout","removeItem","currentMessages","selectedContact","find","c","contactId","targetUserId","handleSendMessage","preventDefault","from","to","content","handleAddContact","alert","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","map","contact","src","alt","index","sender","Date","timestamp","toLocaleTimeString","hour","minute","ref","onSubmit","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","_c","$RefreshReg$"],"sources":["/Users/manasam/Desktop/project_managment-1/frontend/src/components/Student/SDiscussions.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleSuccess } from '../../utils';\r\nimport Sidebar from './SSidebar';\r\nimport Header from './SHeader';\r\n// import '../../css/StudentCss/StudentDashboardLayout.css';\r\nimport '../../css/StudentCss/sDiscussions.css';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst SDiscussions = () => {\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef();\r\n  const messagesEndRef = useRef(null);\r\n  \r\n  // State for contacts/messages\r\n  const [contacts, setContacts] = useState([]);\r\n  const [discussions, setDiscussions] = useState({});\r\n  \r\n  // State for new contact form\r\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\r\n  const [newContactEmail, setNewContactEmail] = useState('');\r\n  const [newContactName, setNewContactName] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const searchTimeoutRef = useRef(null);\r\n  \r\n  // State for selected contact and messages\r\n  const [selectedContactId, setSelectedContactId] = useState(null);\r\n  const [currentDiscussionId, setCurrentDiscussionId] = useState(null);\r\n  const [messageInput, setMessageInput] = useState('');\r\n\r\n  // Auto scroll to bottom of messages\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [discussions, selectedContactId]);\r\n\r\n  // Function to search users\r\n  const searchUsers = async (query) => {\r\n    try {\r\n      setIsSearching(true);\r\n      console.log('Starting search with query:', query);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.error('No token found');\r\n        toast.error('Please login again');\r\n        navigate('/login');\r\n        return;\r\n      }\r\n\r\n      const response = await axios.get(\r\n        `http://localhost:8000/api/student/search-users?query=${encodeURIComponent(query)}`,\r\n        {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          withCredentials: true\r\n        }\r\n      );\r\n      \r\n      if (Array.isArray(response.data)) {\r\n        setSearchResults(response.data);\r\n        setShowSuggestions(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Search error:', error);\r\n      toast.error(error.response?.data?.message || 'Error searching users');\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  // Handle input change with debounce\r\n  const handleInputChange = (e, field) => {\r\n    const value = e.target.value;\r\n    if (field === 'name') {\r\n      setNewContactName(value);\r\n    } else {\r\n      setNewContactEmail(value);\r\n    }\r\n\r\n    // Clear previous timeout\r\n    if (searchTimeoutRef.current) {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    }\r\n\r\n    // Set new timeout for search\r\n    if (value.trim().length >= 2) {\r\n      searchTimeoutRef.current = setTimeout(() => {\r\n        searchUsers(value);\r\n      }, 300);\r\n    } else {\r\n      setSearchResults([]);\r\n      setShowSuggestions(false);\r\n    }\r\n  };\r\n\r\n  // Handle suggestion selection\r\n  const handleSelectSuggestion = (user) => {\r\n    setNewContactName(user.name);\r\n    setNewContactEmail(user.email);\r\n    setShowSuggestions(false);\r\n    setSearchResults([]);\r\n    handleContactSelect(user._id); // Immediately start chat with selected user\r\n    setShowNewContactForm(false); // Close the form after selection\r\n  };\r\n\r\n  // Click outside handler to close suggestions\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (!event.target.closest('.input-container')) {\r\n        setShowSuggestions(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userData = localStorage.getItem('loggedInUser');\r\n    if (userData) {\r\n      const user = JSON.parse(userData);\r\n      setLoggedInUser(user);\r\n      \r\n      // Connect to Socket.IO server\r\n      socketRef.current = io('http://localhost:5000');\r\n      \r\n      // Register user\r\n      socketRef.current.emit('register', {\r\n        userId: user._id,\r\n        name: user.name,\r\n        email: user.email\r\n      });\r\n      \r\n      // Listen for user list updates\r\n      socketRef.current.on('userList', (users) => {\r\n        const filteredUsers = users.filter(u => u.userId !== user._id);\r\n        setContacts(filteredUsers);\r\n      });\r\n\r\n      // Listen for chat initialization\r\n      socketRef.current.on('chatInitialized', ({ discussionId, messages }) => {\r\n        setDiscussions(prev => ({\r\n          ...prev,\r\n          [discussionId]: messages\r\n        }));\r\n        setCurrentDiscussionId(discussionId);\r\n      });\r\n      \r\n      // Listen for incoming messages\r\n      socketRef.current.on('receiveMessage', ({ discussionId, message }) => {\r\n        setDiscussions(prev => ({\r\n          ...prev,\r\n          [discussionId]: [...(prev[discussionId] || []), message]\r\n        }));\r\n      });\r\n      \r\n      // Listen for sent message confirmation\r\n      socketRef.current.on('messageSent', ({ discussionId, message }) => {\r\n        setDiscussions(prev => ({\r\n          ...prev,\r\n          [discussionId]: [...(prev[discussionId] || []), message]\r\n        }));\r\n        setMessageInput('');\r\n      });\r\n\r\n      // Listen for chat history\r\n      socketRef.current.on('chatHistory', ({ discussionId, messages }) => {\r\n        if (discussionId) {\r\n          setDiscussions(prev => ({\r\n            ...prev,\r\n            [discussionId]: messages\r\n          }));\r\n          setCurrentDiscussionId(discussionId);\r\n        }\r\n      });\r\n\r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.disconnect();\r\n        }\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('loggedInUser');\r\n    handleSuccess('User Logged out');\r\n    setTimeout(() => {\r\n      navigate('/login');\r\n    }, 1000);\r\n  };\r\n\r\n  // Get current discussion messages\r\n  const currentMessages = currentDiscussionId ? discussions[currentDiscussionId] || [] : [];\r\n  const selectedContact = contacts.find(c => c.userId === selectedContactId);\r\n\r\n  const handleContactSelect = (contactId) => {\r\n    setSelectedContactId(contactId);\r\n    if (loggedInUser && contactId) {\r\n      socketRef.current.emit('initializeChat', {\r\n        userId: loggedInUser._id,\r\n        targetUserId: contactId\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!messageInput.trim() || !selectedContactId || !currentDiscussionId) return;\r\n    \r\n    const selectedContact = contacts.find(c => c.userId === selectedContactId);\r\n    if (!selectedContact) return;\r\n\r\n    socketRef.current.emit('sendMessage', {\r\n      discussionId: currentDiscussionId,\r\n      from: {\r\n        userId: loggedInUser._id,\r\n        name: loggedInUser.name,\r\n        email: loggedInUser.email\r\n      },\r\n      to: {\r\n        userId: selectedContact.userId,\r\n        name: selectedContact.name,\r\n        email: selectedContact.email\r\n      },\r\n      content: messageInput\r\n    });\r\n  };\r\n\r\n  // Handle adding a new contact\r\n  const handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newContactEmail.trim() || !newContactName.trim()) {\r\n      alert('Please enter both name and email');\r\n      return;\r\n    }\r\n    \r\n    // Reset form\r\n    setNewContactEmail('');\r\n    setNewContactName('');\r\n    setShowSuggestions(false);\r\n    setShowNewContactForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-dashboard-container\">\r\n      <Sidebar onLogout={handleLogout} />\r\n      <div className=\"content-area\">\r\n        <h1>Welcome, {loggedInUser?.name}</h1>\r\n        <div className=\"chat-layout\">\r\n          {/* Contacts List */}\r\n          <div className=\"contacts-panel\">\r\n            <div className=\"contacts-header\">\r\n              <h2>Messages</h2>\r\n              <button \r\n                className=\"add-contact-button\"\r\n                onClick={() => setShowNewContactForm(true)}\r\n              >\r\n                + New Chat\r\n              </button>\r\n            </div>\r\n            \r\n            {/* New Contact Form */}\r\n            {showNewContactForm && (\r\n              <div className=\"new-contact-form\">\r\n                <div className=\"input-container\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search by name or email...\"\r\n                    value={newContactName}\r\n                    onChange={(e) => handleInputChange(e, 'name')}\r\n                  />\r\n                  {isSearching && <div className=\"search-loading\">Searching...</div>}\r\n                  {showSuggestions && searchResults.length > 0 && (\r\n                    <div className=\"suggestions-list\">\r\n                      {searchResults.map(user => (\r\n                        <div\r\n                          key={user._id}\r\n                          className=\"suggestion-item\"\r\n                          onClick={() => handleSelectSuggestion(user)}\r\n                        >\r\n                          <div className=\"suggestion-name\">{user.name}</div>\r\n                          <div className=\"suggestion-email\">{user.email}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                  {showSuggestions && searchResults.length === 0 && !isSearching && (\r\n                    <div className=\"no-results\">No users found</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-buttons\">\r\n                  <button \r\n                    type=\"button\" \r\n                    onClick={() => {\r\n                      setShowNewContactForm(false);\r\n                      setShowSuggestions(false);\r\n                      setSearchResults([]);\r\n                      setNewContactName('');\r\n                      setNewContactEmail('');\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Contacts List */}\r\n            <div className=\"contacts-list\">\r\n              {contacts.map(contact => (\r\n                <div \r\n                  key={contact.userId}\r\n                  className={`contact-item ${selectedContactId === contact.userId ? 'selected' : ''}`}\r\n                  onClick={() => handleContactSelect(contact.userId)}\r\n                >\r\n                  <div className=\"contact-avatar\">\r\n                    <img src={`https://ui-avatars.com/api/?name=${encodeURIComponent(contact.name)}&background=random`} alt={contact.name} />\r\n                  </div>\r\n                  <div className=\"contact-info\">\r\n                    <div className=\"contact-name\">{contact.name}</div>\r\n                    <div className=\"contact-email\">{contact.email}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Chat Area */}\r\n          <div className=\"chat-area\">\r\n            {selectedContact ? (\r\n              <>\r\n                <div className=\"chat-header\">\r\n                  <div className=\"contact-avatar\">\r\n                    <img src={`https://ui-avatars.com/api/?name=${encodeURIComponent(selectedContact.name)}&background=random`} alt={selectedContact.name} />\r\n                  </div>\r\n                  <div className=\"contact-info\">\r\n                    <div className=\"contact-name\">{selectedContact.name}</div>\r\n                    <div className=\"contact-email\">{selectedContact.email}</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"messages-container\">\r\n                  {currentMessages.length > 0 ? (\r\n                    currentMessages.map((message, index) => (\r\n                      <div \r\n                        key={index}\r\n                        className={`message ${message.sender === loggedInUser?._id ? 'sent' : 'received'}`}\r\n                      >\r\n                        <div className=\"message-bubble\">\r\n                          {message.content}\r\n                        </div>\r\n                        <div className=\"message-time\">\r\n                          {new Date(message.timestamp).toLocaleTimeString([], {\r\n                            hour: '2-digit',\r\n                            minute: '2-digit'\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"no-messages\">\r\n                      Start a conversation with {selectedContact.name}\r\n                    </div>\r\n                  )}\r\n                  <div ref={messagesEndRef} />\r\n                </div>\r\n                \r\n                <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={messageInput}\r\n                    onChange={(e) => setMessageInput(e.target.value)}\r\n                  />\r\n                  <button type=\"submit\">Send</button>\r\n                </form>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-contact-selected\">\r\n                <div className=\"placeholder-message\">\r\n                  Select a contact to start chatting\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SDiscussions;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,aAAa;AAC3C,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,MAAM,MAAM,WAAW;AAC9B;AACA,OAAO,uCAAuC;AAC9C,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAMkB,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,SAAS,GAAGlB,MAAM,CAAC,CAAC;EAC1B,MAAMmB,cAAc,GAAGnB,MAAM,CAAC,IAAI,CAAC;;EAEnC;EACA,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAElD;EACA,MAAM,CAACyB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC2B,eAAe,EAAEC,kBAAkB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC+B,aAAa,EAAEC,gBAAgB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMqC,gBAAgB,GAAGpC,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAM,CAACqC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACwC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzC,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAM4C,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAzB,cAAc,CAAC0B,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDjD,SAAS,CAAC,MAAM;IACd6C,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACrB,WAAW,EAAEe,iBAAiB,CAAC,CAAC;;EAEpC;EACA,MAAMW,WAAW,GAAG,MAAOC,KAAK,IAAK;IACnC,IAAI;MACFd,cAAc,CAAC,IAAI,CAAC;MACpBe,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,KAAK,CAAC;MAEjD,MAAMG,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACVF,OAAO,CAACK,KAAK,CAAC,gBAAgB,CAAC;QAC/BrD,KAAK,CAACqD,KAAK,CAAC,oBAAoB,CAAC;QACjCtC,QAAQ,CAAC,QAAQ,CAAC;QAClB;MACF;MAEA,MAAMuC,QAAQ,GAAG,MAAMhD,KAAK,CAACiD,GAAG,CAC9B,wDAAwDC,kBAAkB,CAACT,KAAK,CAAC,EAAE,EACnF;QACEU,OAAO,EAAE;UACP,eAAe,EAAE,UAAUP,KAAK,EAAE;UAClC,cAAc,EAAE;QAClB,CAAC;QACDQ,eAAe,EAAE;MACnB,CACF,CAAC;MAED,IAAIC,KAAK,CAACC,OAAO,CAACN,QAAQ,CAACO,IAAI,CAAC,EAAE;QAChChC,gBAAgB,CAACyB,QAAQ,CAACO,IAAI,CAAC;QAC/B9B,kBAAkB,CAAC,IAAI,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOsB,KAAK,EAAE;MAAA,IAAAS,eAAA,EAAAC,oBAAA;MACdf,OAAO,CAACK,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCrD,KAAK,CAACqD,KAAK,CAAC,EAAAS,eAAA,GAAAT,KAAK,CAACC,QAAQ,cAAAQ,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBD,IAAI,cAAAE,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,uBAAuB,CAAC;IACvE,CAAC,SAAS;MACR/B,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;;EAED;EACA,MAAMgC,iBAAiB,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IACtC,MAAMC,KAAK,GAAGF,CAAC,CAACG,MAAM,CAACD,KAAK;IAC5B,IAAID,KAAK,KAAK,MAAM,EAAE;MACpBxC,iBAAiB,CAACyC,KAAK,CAAC;IAC1B,CAAC,MAAM;MACL3C,kBAAkB,CAAC2C,KAAK,CAAC;IAC3B;;IAEA;IACA,IAAIlC,gBAAgB,CAACS,OAAO,EAAE;MAC5B2B,YAAY,CAACpC,gBAAgB,CAACS,OAAO,CAAC;IACxC;;IAEA;IACA,IAAIyB,KAAK,CAACG,IAAI,CAAC,CAAC,CAACC,MAAM,IAAI,CAAC,EAAE;MAC5BtC,gBAAgB,CAACS,OAAO,GAAG8B,UAAU,CAAC,MAAM;QAC1C3B,WAAW,CAACsB,KAAK,CAAC;MACpB,CAAC,EAAE,GAAG,CAAC;IACT,CAAC,MAAM;MACLvC,gBAAgB,CAAC,EAAE,CAAC;MACpBE,kBAAkB,CAAC,KAAK,CAAC;IAC3B;EACF,CAAC;;EAED;EACA,MAAM2C,sBAAsB,GAAIC,IAAI,IAAK;IACvChD,iBAAiB,CAACgD,IAAI,CAACC,IAAI,CAAC;IAC5BnD,kBAAkB,CAACkD,IAAI,CAACE,KAAK,CAAC;IAC9B9C,kBAAkB,CAAC,KAAK,CAAC;IACzBF,gBAAgB,CAAC,EAAE,CAAC;IACpBiD,mBAAmB,CAACH,IAAI,CAACI,GAAG,CAAC,CAAC,CAAC;IAC/BxD,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED;EACA3B,SAAS,CAAC,MAAM;IACd,MAAMoF,kBAAkB,GAAIC,KAAK,IAAK;MACpC,IAAI,CAACA,KAAK,CAACZ,MAAM,CAACa,OAAO,CAAC,kBAAkB,CAAC,EAAE;QAC7CnD,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC;IAEDoD,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAEJ,kBAAkB,CAAC;IACtD,OAAO,MAAM;MACXG,QAAQ,CAACE,mBAAmB,CAAC,OAAO,EAAEL,kBAAkB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENpF,SAAS,CAAC,MAAM;IACd,MAAM0F,QAAQ,GAAGnC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACrD,IAAIkC,QAAQ,EAAE;MACZ,MAAMX,IAAI,GAAGY,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC;MACjCxE,eAAe,CAAC6D,IAAI,CAAC;;MAErB;MACA3D,SAAS,CAAC2B,OAAO,GAAGtC,EAAE,CAAC,uBAAuB,CAAC;;MAE/C;MACAW,SAAS,CAAC2B,OAAO,CAAC8C,IAAI,CAAC,UAAU,EAAE;QACjCC,MAAM,EAAEf,IAAI,CAACI,GAAG;QAChBH,IAAI,EAAED,IAAI,CAACC,IAAI;QACfC,KAAK,EAAEF,IAAI,CAACE;MACd,CAAC,CAAC;;MAEF;MACA7D,SAAS,CAAC2B,OAAO,CAACgD,EAAE,CAAC,UAAU,EAAGC,KAAK,IAAK;QAC1C,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACL,MAAM,KAAKf,IAAI,CAACI,GAAG,CAAC;QAC9D5D,WAAW,CAAC0E,aAAa,CAAC;MAC5B,CAAC,CAAC;;MAEF;MACA7E,SAAS,CAAC2B,OAAO,CAACgD,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAAEK,YAAY;QAAEC;MAAS,CAAC,KAAK;QACtE5E,cAAc,CAAC6E,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP,CAACF,YAAY,GAAGC;QAClB,CAAC,CAAC,CAAC;QACH3D,sBAAsB,CAAC0D,YAAY,CAAC;MACtC,CAAC,CAAC;;MAEF;MACAhF,SAAS,CAAC2B,OAAO,CAACgD,EAAE,CAAC,gBAAgB,EAAE,CAAC;QAAEK,YAAY;QAAEhC;MAAQ,CAAC,KAAK;QACpE3C,cAAc,CAAC6E,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP,CAACF,YAAY,GAAG,CAAC,IAAIE,IAAI,CAACF,YAAY,CAAC,IAAI,EAAE,CAAC,EAAEhC,OAAO;QACzD,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;;MAEF;MACAhD,SAAS,CAAC2B,OAAO,CAACgD,EAAE,CAAC,aAAa,EAAE,CAAC;QAAEK,YAAY;QAAEhC;MAAQ,CAAC,KAAK;QACjE3C,cAAc,CAAC6E,IAAI,KAAK;UACtB,GAAGA,IAAI;UACP,CAACF,YAAY,GAAG,CAAC,IAAIE,IAAI,CAACF,YAAY,CAAC,IAAI,EAAE,CAAC,EAAEhC,OAAO;QACzD,CAAC,CAAC,CAAC;QACHxB,eAAe,CAAC,EAAE,CAAC;MACrB,CAAC,CAAC;;MAEF;MACAxB,SAAS,CAAC2B,OAAO,CAACgD,EAAE,CAAC,aAAa,EAAE,CAAC;QAAEK,YAAY;QAAEC;MAAS,CAAC,KAAK;QAClE,IAAID,YAAY,EAAE;UAChB3E,cAAc,CAAC6E,IAAI,KAAK;YACtB,GAAGA,IAAI;YACP,CAACF,YAAY,GAAGC;UAClB,CAAC,CAAC,CAAC;UACH3D,sBAAsB,CAAC0D,YAAY,CAAC;QACtC;MACF,CAAC,CAAC;MAEF,OAAO,MAAM;QACX,IAAIhF,SAAS,CAAC2B,OAAO,EAAE;UACrB3B,SAAS,CAAC2B,OAAO,CAACwD,UAAU,CAAC,CAAC;QAChC;MACF,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIpF,SAAS,CAAC2B,OAAO,EAAE;MACrB3B,SAAS,CAAC2B,OAAO,CAACwD,UAAU,CAAC,CAAC;IAChC;IACAhD,YAAY,CAACkD,UAAU,CAAC,OAAO,CAAC;IAChClD,YAAY,CAACkD,UAAU,CAAC,cAAc,CAAC;IACvCnG,aAAa,CAAC,iBAAiB,CAAC;IAChCuE,UAAU,CAAC,MAAM;MACf1D,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACA,MAAMuF,eAAe,GAAGjE,mBAAmB,GAAGjB,WAAW,CAACiB,mBAAmB,CAAC,IAAI,EAAE,GAAG,EAAE;EACzF,MAAMkE,eAAe,GAAGrF,QAAQ,CAACsF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACf,MAAM,KAAKvD,iBAAiB,CAAC;EAE1E,MAAM2C,mBAAmB,GAAI4B,SAAS,IAAK;IACzCtE,oBAAoB,CAACsE,SAAS,CAAC;IAC/B,IAAI7F,YAAY,IAAI6F,SAAS,EAAE;MAC7B1F,SAAS,CAAC2B,OAAO,CAAC8C,IAAI,CAAC,gBAAgB,EAAE;QACvCC,MAAM,EAAE7E,YAAY,CAACkE,GAAG;QACxB4B,YAAY,EAAED;MAChB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAME,iBAAiB,GAAI1C,CAAC,IAAK;IAC/BA,CAAC,CAAC2C,cAAc,CAAC,CAAC;IAElB,IAAI,CAACtE,YAAY,CAACgC,IAAI,CAAC,CAAC,IAAI,CAACpC,iBAAiB,IAAI,CAACE,mBAAmB,EAAE;IAExE,MAAMkE,eAAe,GAAGrF,QAAQ,CAACsF,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACf,MAAM,KAAKvD,iBAAiB,CAAC;IAC1E,IAAI,CAACoE,eAAe,EAAE;IAEtBvF,SAAS,CAAC2B,OAAO,CAAC8C,IAAI,CAAC,aAAa,EAAE;MACpCO,YAAY,EAAE3D,mBAAmB;MACjCyE,IAAI,EAAE;QACJpB,MAAM,EAAE7E,YAAY,CAACkE,GAAG;QACxBH,IAAI,EAAE/D,YAAY,CAAC+D,IAAI;QACvBC,KAAK,EAAEhE,YAAY,CAACgE;MACtB,CAAC;MACDkC,EAAE,EAAE;QACFrB,MAAM,EAAEa,eAAe,CAACb,MAAM;QAC9Bd,IAAI,EAAE2B,eAAe,CAAC3B,IAAI;QAC1BC,KAAK,EAAE0B,eAAe,CAAC1B;MACzB,CAAC;MACDmC,OAAO,EAAEzE;IACX,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM0E,gBAAgB,GAAI/C,CAAC,IAAK;IAC9BA,CAAC,CAAC2C,cAAc,CAAC,CAAC;IAElB,IAAI,CAACrF,eAAe,CAAC+C,IAAI,CAAC,CAAC,IAAI,CAAC7C,cAAc,CAAC6C,IAAI,CAAC,CAAC,EAAE;MACrD2C,KAAK,CAAC,kCAAkC,CAAC;MACzC;IACF;;IAEA;IACAzF,kBAAkB,CAAC,EAAE,CAAC;IACtBE,iBAAiB,CAAC,EAAE,CAAC;IACrBI,kBAAkB,CAAC,KAAK,CAAC;IACzBR,qBAAqB,CAAC,KAAK,CAAC;EAC9B,CAAC;EAED,oBACEf,OAAA;IAAK2G,SAAS,EAAC,6BAA6B;IAAAC,QAAA,gBAC1C5G,OAAA,CAACL,OAAO;MAACkH,QAAQ,EAAEjB;IAAa;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnCjH,OAAA;MAAK2G,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B5G,OAAA;QAAA4G,QAAA,GAAI,WAAS,EAACvG,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE+D,IAAI;MAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtCjH,OAAA;QAAK2G,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAE1B5G,OAAA;UAAK2G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B5G,OAAA;YAAK2G,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC9B5G,OAAA;cAAA4G,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBjH,OAAA;cACE2G,SAAS,EAAC,oBAAoB;cAC9BO,OAAO,EAAEA,CAAA,KAAMnG,qBAAqB,CAAC,IAAI,CAAE;cAAA6F,QAAA,EAC5C;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,EAGLnG,kBAAkB,iBACjBd,OAAA;YAAK2G,SAAS,EAAC,kBAAkB;YAAAC,QAAA,gBAC/B5G,OAAA;cAAK2G,SAAS,EAAC,iBAAiB;cAAAC,QAAA,gBAC9B5G,OAAA;gBACEmH,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,4BAA4B;gBACxCxD,KAAK,EAAE1C,cAAe;gBACtBmG,QAAQ,EAAG3D,CAAC,IAAKD,iBAAiB,CAACC,CAAC,EAAE,MAAM;cAAE;gBAAAoD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC,EACDzF,WAAW,iBAAIxB,OAAA;gBAAK2G,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAC;cAAY;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACjE3F,eAAe,IAAIF,aAAa,CAAC4C,MAAM,GAAG,CAAC,iBAC1ChE,OAAA;gBAAK2G,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,EAC9BxF,aAAa,CAACkG,GAAG,CAACnD,IAAI,iBACrBnE,OAAA;kBAEE2G,SAAS,EAAC,iBAAiB;kBAC3BO,OAAO,EAAEA,CAAA,KAAMhD,sBAAsB,CAACC,IAAI,CAAE;kBAAAyC,QAAA,gBAE5C5G,OAAA;oBAAK2G,SAAS,EAAC,iBAAiB;oBAAAC,QAAA,EAAEzC,IAAI,CAACC;kBAAI;oBAAA0C,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,eAClDjH,OAAA;oBAAK2G,SAAS,EAAC,kBAAkB;oBAAAC,QAAA,EAAEzC,IAAI,CAACE;kBAAK;oBAAAyC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA,GAL/C9C,IAAI,CAACI,GAAG;kBAAAuC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAMV,CACN;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACN,EACA3F,eAAe,IAAIF,aAAa,CAAC4C,MAAM,KAAK,CAAC,IAAI,CAACxC,WAAW,iBAC5DxB,OAAA;gBAAK2G,SAAS,EAAC,YAAY;gBAAAC,QAAA,EAAC;cAAc;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAChD;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACNjH,OAAA;cAAK2G,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3B5G,OAAA;gBACEmH,IAAI,EAAC,QAAQ;gBACbD,OAAO,EAAEA,CAAA,KAAM;kBACbnG,qBAAqB,CAAC,KAAK,CAAC;kBAC5BQ,kBAAkB,CAAC,KAAK,CAAC;kBACzBF,gBAAgB,CAAC,EAAE,CAAC;kBACpBF,iBAAiB,CAAC,EAAE,CAAC;kBACrBF,kBAAkB,CAAC,EAAE,CAAC;gBACxB,CAAE;gBAAA2F,QAAA,EACH;cAED;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACN,eAGDjH,OAAA;YAAK2G,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC3BlG,QAAQ,CAAC4G,GAAG,CAACC,OAAO,iBACnBvH,OAAA;cAEE2G,SAAS,EAAE,gBAAgBhF,iBAAiB,KAAK4F,OAAO,CAACrC,MAAM,GAAG,UAAU,GAAG,EAAE,EAAG;cACpFgC,OAAO,EAAEA,CAAA,KAAM5C,mBAAmB,CAACiD,OAAO,CAACrC,MAAM,CAAE;cAAA0B,QAAA,gBAEnD5G,OAAA;gBAAK2G,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,eAC7B5G,OAAA;kBAAKwH,GAAG,EAAE,oCAAoCxE,kBAAkB,CAACuE,OAAO,CAACnD,IAAI,CAAC,oBAAqB;kBAACqD,GAAG,EAAEF,OAAO,CAACnD;gBAAK;kBAAA0C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtH,CAAC,eACNjH,OAAA;gBAAK2G,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B5G,OAAA;kBAAK2G,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAEW,OAAO,CAACnD;gBAAI;kBAAA0C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAClDjH,OAAA;kBAAK2G,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAEW,OAAO,CAAClD;gBAAK;kBAAAyC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjD,CAAC;YAAA,GAVDM,OAAO,CAACrC,MAAM;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWhB,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNjH,OAAA;UAAK2G,SAAS,EAAC,WAAW;UAAAC,QAAA,EACvBb,eAAe,gBACd/F,OAAA,CAAAE,SAAA;YAAA0G,QAAA,gBACE5G,OAAA;cAAK2G,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B5G,OAAA;gBAAK2G,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,eAC7B5G,OAAA;kBAAKwH,GAAG,EAAE,oCAAoCxE,kBAAkB,CAAC+C,eAAe,CAAC3B,IAAI,CAAC,oBAAqB;kBAACqD,GAAG,EAAE1B,eAAe,CAAC3B;gBAAK;kBAAA0C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtI,CAAC,eACNjH,OAAA;gBAAK2G,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC3B5G,OAAA;kBAAK2G,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAAEb,eAAe,CAAC3B;gBAAI;kBAAA0C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eAC1DjH,OAAA;kBAAK2G,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAAEb,eAAe,CAAC1B;gBAAK;kBAAAyC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACzD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENjH,OAAA;cAAK2G,SAAS,EAAC,oBAAoB;cAAAC,QAAA,GAChCd,eAAe,CAAC9B,MAAM,GAAG,CAAC,GACzB8B,eAAe,CAACwB,GAAG,CAAC,CAAC9D,OAAO,EAAEkE,KAAK,kBACjC1H,OAAA;gBAEE2G,SAAS,EAAE,WAAWnD,OAAO,CAACmE,MAAM,MAAKtH,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEkE,GAAG,IAAG,MAAM,GAAG,UAAU,EAAG;gBAAAqC,QAAA,gBAEnF5G,OAAA;kBAAK2G,SAAS,EAAC,gBAAgB;kBAAAC,QAAA,EAC5BpD,OAAO,CAACgD;gBAAO;kBAAAM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACb,CAAC,eACNjH,OAAA;kBAAK2G,SAAS,EAAC,cAAc;kBAAAC,QAAA,EAC1B,IAAIgB,IAAI,CAACpE,OAAO,CAACqE,SAAS,CAAC,CAACC,kBAAkB,CAAC,EAAE,EAAE;oBAClDC,IAAI,EAAE,SAAS;oBACfC,MAAM,EAAE;kBACV,CAAC;gBAAC;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,GAXDS,KAAK;gBAAAZ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAYP,CACN,CAAC,gBAEFjH,OAAA;gBAAK2G,SAAS,EAAC,aAAa;gBAAAC,QAAA,GAAC,4BACD,EAACb,eAAe,CAAC3B,IAAI;cAAA;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CACN,eACDjH,OAAA;gBAAKiI,GAAG,EAAExH;cAAe;gBAAAqG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzB,CAAC,eAENjH,OAAA;cAAM2G,SAAS,EAAC,oBAAoB;cAACuB,QAAQ,EAAE9B,iBAAkB;cAAAQ,QAAA,gBAC/D5G,OAAA;gBACEmH,IAAI,EAAC,MAAM;gBACXC,WAAW,EAAC,mBAAmB;gBAC/BxD,KAAK,EAAE7B,YAAa;gBACpBsF,QAAQ,EAAG3D,CAAC,IAAK1B,eAAe,CAAC0B,CAAC,CAACG,MAAM,CAACD,KAAK;cAAE;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClD,CAAC,eACFjH,OAAA;gBAAQmH,IAAI,EAAC,QAAQ;gBAAAP,QAAA,EAAC;cAAI;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC;UAAA,eACP,CAAC,gBAEHjH,OAAA;YAAK2G,SAAS,EAAC,qBAAqB;YAAAC,QAAA,eAClC5G,OAAA;cAAK2G,SAAS,EAAC,qBAAqB;cAAAC,QAAA,EAAC;YAErC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNjH,OAAA,CAACT,cAAc;MACb4I,QAAQ,EAAC,WAAW;MACpBC,SAAS,EAAE,IAAK;MAChBC,eAAe,EAAE,KAAM;MACvBC,WAAW,EAAE,KAAM;MACnBC,YAAY;MACZC,GAAG,EAAE,KAAM;MACXC,gBAAgB;MAChBC,SAAS;MACTC,YAAY;IAAA;MAAA7B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7G,EAAA,CAzZID,YAAY;EAAA,QAECV,WAAW;AAAA;AAAAmJ,EAAA,GAFxBzI,YAAY;AA2ZlB,eAAeA,YAAY;AAAC,IAAAyI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}