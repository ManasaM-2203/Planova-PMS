{"ast":null,"code":"var _jsxFileName = \"/Users/manasam/Desktop/project_managment-1/frontend/src/components/Student/SDiscussions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { handleSuccess } from '../../utils';\nimport Sidebar from './SSidebar';\nimport Header from './SHeader';\n// import '../../css/StudentCss/StudentDashboardLayout.css';\nimport '../../css/StudentCss/sDiscussions.css';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SDiscussions = () => {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const navigate = useNavigate();\n  const socketRef = useRef();\n\n  // State for contacts/messages\n  const [contacts, setContacts] = useState([]);\n\n  // State for new contact form\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\n  const [newContactEmail, setNewContactEmail] = useState('');\n  const [newContactName, setNewContactName] = useState('');\n\n  // State for selected contact\n  const [selectedContactId, setSelectedContactId] = useState(null);\n\n  // State for message input\n  const [messageInput, setMessageInput] = useState('');\n  useEffect(() => {\n    const userData = localStorage.getItem('loggedInUser');\n    if (userData) {\n      const user = JSON.parse(userData);\n      setLoggedInUser(user);\n\n      // Connect to Socket.IO server\n      socketRef.current = io('http://localhost:5000');\n\n      // Register user\n      socketRef.current.emit('register', {\n        userId: user._id,\n        name: user.name,\n        email: user.email\n      });\n\n      // Listen for user list updates\n      socketRef.current.on('userList', users => {\n        const filteredUsers = users.filter(u => u.userId !== user._id);\n        setContacts(filteredUsers.map(u => ({\n          id: u.userId,\n          name: u.name,\n          email: u.email,\n          avatar: '/avatars/default.jpg',\n          messages: []\n        })));\n      });\n\n      // Listen for incoming messages\n      socketRef.current.on('receiveMessage', ({\n        from,\n        message,\n        timestamp\n      }) => {\n        setContacts(prevContacts => prevContacts.map(contact => {\n          if (contact.id === from.userId) {\n            return {\n              ...contact,\n              messages: [...contact.messages, {\n                id: Date.now(),\n                text: message,\n                sender: from.userId,\n                timestamp\n              }]\n            };\n          }\n          return contact;\n        }));\n      });\n\n      // Listen for sent message confirmation\n      socketRef.current.on('messageSent', ({\n        to,\n        message,\n        timestamp\n      }) => {\n        setContacts(prevContacts => prevContacts.map(contact => {\n          if (contact.id === to.userId) {\n            return {\n              ...contact,\n              messages: [...contact.messages, {\n                id: Date.now(),\n                text: message,\n                sender: 'me',\n                timestamp\n              }]\n            };\n          }\n          return contact;\n        }));\n      });\n      return () => {\n        if (socketRef.current) {\n          socketRef.current.disconnect();\n        }\n      };\n    }\n  }, []);\n  const handleLogout = () => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    localStorage.removeItem('token');\n    localStorage.removeItem('loggedInUser');\n    handleSuccess('User Logged out');\n    setTimeout(() => {\n      navigate('/login');\n    }, 1000);\n  };\n\n  // Get selected contact\n  const selectedContact = contacts.find(contact => contact.id === selectedContactId);\n\n  // Handle sending a message\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!messageInput.trim() || !selectedContactId) return;\n\n    // Send message through socket\n    socketRef.current.emit('sendMessage', {\n      to: {\n        userId: selectedContactId,\n        name: selectedContact.name,\n        email: selectedContact.email\n      },\n      from: {\n        userId: loggedInUser._id,\n        name: loggedInUser.name,\n        email: loggedInUser.email\n      },\n      message: messageInput\n    });\n\n    // Clear input\n    setMessageInput('');\n  };\n\n  // Handle adding a new contact\n  const handleAddContact = e => {\n    e.preventDefault();\n    if (!newContactEmail.trim() || !newContactName.trim()) {\n      alert('Please enter both name and email');\n      return;\n    }\n\n    // Reset form\n    setNewContactEmail('');\n    setNewContactName('');\n    setShowNewContactForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-contact-button\",\n              onClick: () => setShowNewContactForm(true),\n              children: \"+ New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), showNewContactForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-contact-form\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleAddContact,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Name\",\n                value: newContactName,\n                onChange: e => setNewContactName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: newContactEmail,\n                onChange: e => setNewContactEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => setShowNewContactForm(false),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-list\",\n            children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `contact-item ${selectedContactId === contact.id ? 'selected' : ''}`,\n              onClick: () => setSelectedContactId(contact.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: contact.avatar,\n                  alt: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: contact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 19\n              }, this)]\n            }, contact.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-area\",\n          children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: selectedContact.avatar,\n                  alt: selectedContact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: selectedContact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: selectedContact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-container\",\n              children: selectedContact.messages.length > 0 ? selectedContact.messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${message.sender === 'me' ? 'sent' : 'received'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-bubble\",\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-time\",\n                  children: new Date(message.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 25\n                }, this)]\n              }, message.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-messages\",\n                children: [\"Start a conversation with \", selectedContact.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"message-input-form\",\n              onSubmit: handleSendMessage,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Type a message...\",\n                value: messageInput,\n                onChange: e => setMessageInput(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-contact-selected\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"placeholder-message\",\n              children: \"Select a contact to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(SDiscussions, \"FqwLhxnFdE3kIWRqPNvHF/vZd0Y=\", false, function () {\n  return [useNavigate];\n});\n_c = SDiscussions;\nexport default SDiscussions;\nvar _c;\n$RefreshReg$(_c, \"SDiscussions\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ToastContainer","useNavigate","handleSuccess","Sidebar","Header","io","jsxDEV","_jsxDEV","Fragment","_Fragment","SDiscussions","_s","loggedInUser","setLoggedInUser","navigate","socketRef","contacts","setContacts","showNewContactForm","setShowNewContactForm","newContactEmail","setNewContactEmail","newContactName","setNewContactName","selectedContactId","setSelectedContactId","messageInput","setMessageInput","userData","localStorage","getItem","user","JSON","parse","current","emit","userId","_id","name","email","on","users","filteredUsers","filter","u","map","id","avatar","messages","from","message","timestamp","prevContacts","contact","Date","now","text","sender","to","disconnect","handleLogout","removeItem","setTimeout","selectedContact","find","handleSendMessage","e","preventDefault","trim","handleAddContact","alert","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","value","onChange","target","required","src","alt","length","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["/Users/manasam/Desktop/project_managment-1/frontend/src/components/Student/SDiscussions.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleSuccess } from '../../utils';\r\nimport Sidebar from './SSidebar';\r\nimport Header from './SHeader';\r\n// import '../../css/StudentCss/StudentDashboardLayout.css';\r\nimport '../../css/StudentCss/sDiscussions.css';\r\nimport io from 'socket.io-client';\r\n\r\nconst SDiscussions = () => {\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef();\r\n  \r\n  // State for contacts/messages\r\n  const [contacts, setContacts] = useState([]);\r\n  \r\n  // State for new contact form\r\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\r\n  const [newContactEmail, setNewContactEmail] = useState('');\r\n  const [newContactName, setNewContactName] = useState('');\r\n  \r\n  // State for selected contact\r\n  const [selectedContactId, setSelectedContactId] = useState(null);\r\n  \r\n  // State for message input\r\n  const [messageInput, setMessageInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    const userData = localStorage.getItem('loggedInUser');\r\n    if (userData) {\r\n      const user = JSON.parse(userData);\r\n      setLoggedInUser(user);\r\n      \r\n      // Connect to Socket.IO server\r\n      socketRef.current = io('http://localhost:5000');\r\n      \r\n      // Register user\r\n      socketRef.current.emit('register', {\r\n        userId: user._id,\r\n        name: user.name,\r\n        email: user.email\r\n      });\r\n      \r\n      // Listen for user list updates\r\n      socketRef.current.on('userList', (users) => {\r\n        const filteredUsers = users.filter(u => u.userId !== user._id);\r\n        setContacts(filteredUsers.map(u => ({\r\n          id: u.userId,\r\n          name: u.name,\r\n          email: u.email,\r\n          avatar: '/avatars/default.jpg',\r\n          messages: []\r\n        })));\r\n      });\r\n      \r\n      // Listen for incoming messages\r\n      socketRef.current.on('receiveMessage', ({ from, message, timestamp }) => {\r\n        setContacts(prevContacts => prevContacts.map(contact => {\r\n          if (contact.id === from.userId) {\r\n            return {\r\n              ...contact,\r\n              messages: [...contact.messages, {\r\n                id: Date.now(),\r\n                text: message,\r\n                sender: from.userId,\r\n                timestamp\r\n              }]\r\n            };\r\n          }\r\n          return contact;\r\n        }));\r\n      });\r\n      \r\n      // Listen for sent message confirmation\r\n      socketRef.current.on('messageSent', ({ to, message, timestamp }) => {\r\n        setContacts(prevContacts => prevContacts.map(contact => {\r\n          if (contact.id === to.userId) {\r\n            return {\r\n              ...contact,\r\n              messages: [...contact.messages, {\r\n                id: Date.now(),\r\n                text: message,\r\n                sender: 'me',\r\n                timestamp\r\n              }]\r\n            };\r\n          }\r\n          return contact;\r\n        }));\r\n      });\r\n      \r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.disconnect();\r\n        }\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('loggedInUser');\r\n    handleSuccess('User Logged out');\r\n    setTimeout(() => {\r\n      navigate('/login');\r\n    }, 1000);\r\n  };\r\n  \r\n  // Get selected contact\r\n  const selectedContact = contacts.find(contact => contact.id === selectedContactId);\r\n  \r\n  // Handle sending a message\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!messageInput.trim() || !selectedContactId) return;\r\n    \r\n    // Send message through socket\r\n    socketRef.current.emit('sendMessage', {\r\n      to: {\r\n        userId: selectedContactId,\r\n        name: selectedContact.name,\r\n        email: selectedContact.email\r\n      },\r\n      from: {\r\n        userId: loggedInUser._id,\r\n        name: loggedInUser.name,\r\n        email: loggedInUser.email\r\n      },\r\n      message: messageInput\r\n    });\r\n    \r\n    // Clear input\r\n    setMessageInput('');\r\n  };\r\n  \r\n  // Handle adding a new contact\r\n  const handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newContactEmail.trim() || !newContactName.trim()) {\r\n      alert('Please enter both name and email');\r\n      return;\r\n    }\r\n    \r\n    // Reset form\r\n    setNewContactEmail('');\r\n    setNewContactName('');\r\n    setShowNewContactForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-dashboard-container\">\r\n      <Sidebar onLogout={handleLogout} />\r\n      <div className=\"content-area\">\r\n        <h1>Welcome, {loggedInUser?.name}</h1>\r\n        <div className=\"chat-layout\">\r\n          {/* Contacts List */}\r\n          <div className=\"contacts-panel\">\r\n            <div className=\"contacts-header\">\r\n              <h2>Messages</h2>\r\n              <button \r\n                className=\"add-contact-button\"\r\n                onClick={() => setShowNewContactForm(true)}\r\n              >\r\n                + New Chat\r\n              </button>\r\n            </div>\r\n            \r\n            {/* New Contact Form */}\r\n            {showNewContactForm && (\r\n              <div className=\"new-contact-form\">\r\n                <form onSubmit={handleAddContact}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    value={newContactName}\r\n                    onChange={(e) => setNewContactName(e.target.value)}\r\n                    required\r\n                  />\r\n                  <input\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={newContactEmail}\r\n                    onChange={(e) => setNewContactEmail(e.target.value)}\r\n                    required\r\n                  />\r\n                  <div className=\"form-buttons\">\r\n                    <button type=\"submit\">Add</button>\r\n                    <button \r\n                      type=\"button\" \r\n                      onClick={() => setShowNewContactForm(false)}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Contacts List */}\r\n            <div className=\"contacts-list\">\r\n              {contacts.map(contact => (\r\n                <div \r\n                  key={contact.id}\r\n                  className={`contact-item ${selectedContactId === contact.id ? 'selected' : ''}`}\r\n                  onClick={() => setSelectedContactId(contact.id)}\r\n                >\r\n                  <div className=\"contact-avatar\">\r\n                    <img src={contact.avatar} alt={contact.name} />\r\n                  </div>\r\n                  <div className=\"contact-info\">\r\n                    <div className=\"contact-name\">{contact.name}</div>\r\n                    <div className=\"contact-email\">{contact.email}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Chat Area */}\r\n          <div className=\"chat-area\">\r\n            {selectedContact ? (\r\n              <>\r\n                <div className=\"chat-header\">\r\n                  <div className=\"contact-avatar\">\r\n                    <img src={selectedContact.avatar} alt={selectedContact.name} />\r\n                  </div>\r\n                  <div className=\"contact-info\">\r\n                    <div className=\"contact-name\">{selectedContact.name}</div>\r\n                    <div className=\"contact-email\">{selectedContact.email}</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"messages-container\">\r\n                  {selectedContact.messages.length > 0 ? (\r\n                    selectedContact.messages.map(message => (\r\n                      <div \r\n                        key={message.id}\r\n                        className={`message ${message.sender === 'me' ? 'sent' : 'received'}`}\r\n                      >\r\n                        <div className=\"message-bubble\">\r\n                          {message.text}\r\n                        </div>\r\n                        <div className=\"message-time\">\r\n                          {new Date(message.timestamp).toLocaleTimeString([], {\r\n                            hour: '2-digit',\r\n                            minute: '2-digit'\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"no-messages\">\r\n                      Start a conversation with {selectedContact.name}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={messageInput}\r\n                    onChange={(e) => setMessageInput(e.target.value)}\r\n                  />\r\n                  <button type=\"submit\">Send</button>\r\n                </form>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-contact-selected\">\r\n                <div className=\"placeholder-message\">\r\n                  Select a contact to start chatting\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SDiscussions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}