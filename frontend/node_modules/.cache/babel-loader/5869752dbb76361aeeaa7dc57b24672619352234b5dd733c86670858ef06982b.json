{"ast":null,"code":"var _jsxFileName = \"/Users/manasam/Desktop/project_managment-1/frontend/src/components/Student/SDiscussions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { handleSuccess } from '../../utils';\nimport Sidebar from './SSidebar';\nimport Header from './SHeader';\n// import '../../css/StudentCss/StudentDashboardLayout.css';\nimport '../../css/StudentCss/sDiscussions.css';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SDiscussions = () => {\n  _s();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const navigate = useNavigate();\n  const socketRef = useRef();\n\n  // State for contacts/messages\n  const [contacts, setContacts] = useState([]);\n\n  // State for new contact form\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\n  const [newContactEmail, setNewContactEmail] = useState('');\n  const [newContactName, setNewContactName] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const searchTimeoutRef = useRef(null);\n\n  // State for selected contact\n  const [selectedContactId, setSelectedContactId] = useState(null);\n\n  // State for message input\n  const [messageInput, setMessageInput] = useState('');\n\n  // Function to search users\n  const searchUsers = async query => {\n    try {\n      setIsSearching(true);\n      console.log('Searching for:', query);\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:8000/api/student/search-users?query=${encodeURIComponent(query)}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      console.log('Search results:', response.data);\n      setSearchResults(response.data);\n      setShowSuggestions(true);\n    } catch (error) {\n      console.error('Error searching users:', error);\n      toast.error('Error searching for users');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  // Handle input change with debounce\n  const handleInputChange = (e, field) => {\n    const value = e.target.value;\n    if (field === 'name') {\n      setNewContactName(value);\n    } else {\n      setNewContactEmail(value);\n    }\n\n    // Clear previous timeout\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    // Set new timeout for search\n    if (value.trim().length >= 2) {\n      // Only search if at least 2 characters\n      searchTimeoutRef.current = setTimeout(() => {\n        searchUsers(value);\n      }, 300);\n    } else {\n      setSearchResults([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  // Handle suggestion selection\n  const handleSelectSuggestion = user => {\n    setNewContactName(user.name);\n    setNewContactEmail(user.email);\n    setShowSuggestions(false);\n    setSearchResults([]);\n  };\n\n  // Click outside handler to close suggestions\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (!event.target.closest('.input-container')) {\n        setShowSuggestions(false);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  useEffect(() => {\n    const userData = localStorage.getItem('loggedInUser');\n    if (userData) {\n      const user = JSON.parse(userData);\n      setLoggedInUser(user);\n\n      // Connect to Socket.IO server\n      socketRef.current = io('http://localhost:5000');\n\n      // Register user\n      socketRef.current.emit('register', {\n        userId: user._id,\n        name: user.name,\n        email: user.email\n      });\n\n      // Listen for user list updates\n      socketRef.current.on('userList', users => {\n        const filteredUsers = users.filter(u => u.userId !== user._id);\n        setContacts(filteredUsers.map(u => ({\n          id: u.userId,\n          name: u.name,\n          email: u.email,\n          avatar: '/avatars/default.jpg',\n          messages: []\n        })));\n      });\n\n      // Listen for incoming messages\n      socketRef.current.on('receiveMessage', ({\n        from,\n        message,\n        timestamp\n      }) => {\n        setContacts(prevContacts => prevContacts.map(contact => {\n          if (contact.id === from.userId) {\n            return {\n              ...contact,\n              messages: [...contact.messages, {\n                id: Date.now(),\n                text: message,\n                sender: from.userId,\n                timestamp\n              }]\n            };\n          }\n          return contact;\n        }));\n      });\n\n      // Listen for sent message confirmation\n      socketRef.current.on('messageSent', ({\n        to,\n        message,\n        timestamp\n      }) => {\n        setContacts(prevContacts => prevContacts.map(contact => {\n          if (contact.id === to.userId) {\n            return {\n              ...contact,\n              messages: [...contact.messages, {\n                id: Date.now(),\n                text: message,\n                sender: 'me',\n                timestamp\n              }]\n            };\n          }\n          return contact;\n        }));\n      });\n      return () => {\n        if (socketRef.current) {\n          socketRef.current.disconnect();\n        }\n      };\n    }\n  }, []);\n  const handleLogout = () => {\n    if (socketRef.current) {\n      socketRef.current.disconnect();\n    }\n    localStorage.removeItem('token');\n    localStorage.removeItem('loggedInUser');\n    handleSuccess('User Logged out');\n    setTimeout(() => {\n      navigate('/login');\n    }, 1000);\n  };\n\n  // Get selected contact\n  const selectedContact = contacts.find(contact => contact.id === selectedContactId);\n\n  // Handle sending a message\n  const handleSendMessage = e => {\n    e.preventDefault();\n    if (!messageInput.trim() || !selectedContactId) return;\n\n    // Send message through socket\n    socketRef.current.emit('sendMessage', {\n      to: {\n        userId: selectedContactId,\n        name: selectedContact.name,\n        email: selectedContact.email\n      },\n      from: {\n        userId: loggedInUser._id,\n        name: loggedInUser.name,\n        email: loggedInUser.email\n      },\n      message: messageInput\n    });\n\n    // Clear input\n    setMessageInput('');\n  };\n\n  // Handle adding a new contact\n  const handleAddContact = e => {\n    e.preventDefault();\n    if (!newContactEmail.trim() || !newContactName.trim()) {\n      alert('Please enter both name and email');\n      return;\n    }\n\n    // Reset form\n    setNewContactEmail('');\n    setNewContactName('');\n    setShowSuggestions(false);\n    setShowNewContactForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      onLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, \", loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contacts-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Messages\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-contact-button\",\n              onClick: () => setShowNewContactForm(true),\n              children: \"+ New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), showNewContactForm && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-contact-form\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleAddContact,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Search by name...\",\n                  value: newContactName,\n                  onChange: e => handleInputChange(e, 'name'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"search-loading\",\n                  children: \"Searching...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 37\n                }, this), showSuggestions && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggestions-list\",\n                  children: searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggestion-item\",\n                    onClick: () => handleSelectSuggestion(user),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"suggestion-name\",\n                      children: user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 273,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"suggestion-email\",\n                      children: user.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 29\n                    }, this)]\n                  }, user._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this), showSuggestions && searchResults.length === 0 && !isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"no-results\",\n                  children: \"No users found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  placeholder: \"Or search by email...\",\n                  value: newContactEmail,\n                  onChange: e => handleInputChange(e, 'email'),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 21\n                }, this), isSearching && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"search-loading\",\n                  children: \"Searching...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 37\n                }, this), showSuggestions && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggestions-list\",\n                  children: searchResults.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggestion-item\",\n                    onClick: () => handleSelectSuggestion(user),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"suggestion-name\",\n                      children: user.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"suggestion-email\",\n                      children: user.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 29\n                    }, this)]\n                  }, user._id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    setShowNewContactForm(false);\n                    setShowSuggestions(false);\n                    setSearchResults([]);\n                    setNewContactName('');\n                    setNewContactEmail('');\n                  },\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"contacts-list\",\n            children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `contact-item ${selectedContactId === contact.id ? 'selected' : ''}`,\n              onClick: () => setSelectedContactId(contact.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: contact.avatar,\n                  alt: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: contact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: contact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this)]\n            }, contact.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-area\",\n          children: selectedContact ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-avatar\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: selectedContact.avatar,\n                  alt: selectedContact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"contact-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-name\",\n                  children: selectedContact.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-email\",\n                  children: selectedContact.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"messages-container\",\n              children: selectedContact.messages.length > 0 ? selectedContact.messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `message ${message.sender === 'me' ? 'sent' : 'received'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-bubble\",\n                  children: message.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-time\",\n                  children: new Date(message.timestamp).toLocaleTimeString([], {\n                    hour: '2-digit',\n                    minute: '2-digit'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 25\n                }, this)]\n              }, message.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 23\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"no-messages\",\n                children: [\"Start a conversation with \", selectedContact.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              className: \"message-input-form\",\n              onSubmit: handleSendMessage,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Type a message...\",\n                value: messageInput,\n                onChange: e => setMessageInput(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"no-contact-selected\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"placeholder-message\",\n              children: \"Select a contact to start chatting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(SDiscussions, \"+kWEqU9DqgkcVPFEayFE1m4RvsM=\", false, function () {\n  return [useNavigate];\n});\n_c = SDiscussions;\nexport default SDiscussions;\nvar _c;\n$RefreshReg$(_c, \"SDiscussions\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ToastContainer","toast","useNavigate","handleSuccess","Sidebar","Header","io","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SDiscussions","_s","loggedInUser","setLoggedInUser","navigate","socketRef","contacts","setContacts","showNewContactForm","setShowNewContactForm","newContactEmail","setNewContactEmail","newContactName","setNewContactName","searchResults","setSearchResults","showSuggestions","setShowSuggestions","isSearching","setIsSearching","searchTimeoutRef","selectedContactId","setSelectedContactId","messageInput","setMessageInput","searchUsers","query","console","log","token","localStorage","getItem","response","get","encodeURIComponent","headers","data","error","handleInputChange","e","field","value","target","current","clearTimeout","trim","length","setTimeout","handleSelectSuggestion","user","name","email","handleClickOutside","event","closest","document","addEventListener","removeEventListener","userData","JSON","parse","emit","userId","_id","on","users","filteredUsers","filter","u","map","id","avatar","messages","from","message","timestamp","prevContacts","contact","Date","now","text","sender","to","disconnect","handleLogout","removeItem","selectedContact","find","handleSendMessage","preventDefault","handleAddContact","alert","className","children","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","placeholder","onChange","required","src","alt","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["/Users/manasam/Desktop/project_managment-1/frontend/src/components/Student/SDiscussions.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { handleSuccess } from '../../utils';\r\nimport Sidebar from './SSidebar';\r\nimport Header from './SHeader';\r\n// import '../../css/StudentCss/StudentDashboardLayout.css';\r\nimport '../../css/StudentCss/sDiscussions.css';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\n\r\nconst SDiscussions = () => {\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef();\r\n  \r\n  // State for contacts/messages\r\n  const [contacts, setContacts] = useState([]);\r\n  \r\n  // State for new contact form\r\n  const [showNewContactForm, setShowNewContactForm] = useState(false);\r\n  const [newContactEmail, setNewContactEmail] = useState('');\r\n  const [newContactName, setNewContactName] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [isSearching, setIsSearching] = useState(false);\r\n  const searchTimeoutRef = useRef(null);\r\n  \r\n  // State for selected contact\r\n  const [selectedContactId, setSelectedContactId] = useState(null);\r\n  \r\n  // State for message input\r\n  const [messageInput, setMessageInput] = useState('');\r\n\r\n  // Function to search users\r\n  const searchUsers = async (query) => {\r\n    try {\r\n      setIsSearching(true);\r\n      console.log('Searching for:', query);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:8000/api/student/search-users?query=${encodeURIComponent(query)}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      console.log('Search results:', response.data);\r\n      setSearchResults(response.data);\r\n      setShowSuggestions(true);\r\n    } catch (error) {\r\n      console.error('Error searching users:', error);\r\n      toast.error('Error searching for users');\r\n    } finally {\r\n      setIsSearching(false);\r\n    }\r\n  };\r\n\r\n  // Handle input change with debounce\r\n  const handleInputChange = (e, field) => {\r\n    const value = e.target.value;\r\n    if (field === 'name') {\r\n      setNewContactName(value);\r\n    } else {\r\n      setNewContactEmail(value);\r\n    }\r\n\r\n    // Clear previous timeout\r\n    if (searchTimeoutRef.current) {\r\n      clearTimeout(searchTimeoutRef.current);\r\n    }\r\n\r\n    // Set new timeout for search\r\n    if (value.trim().length >= 2) { // Only search if at least 2 characters\r\n      searchTimeoutRef.current = setTimeout(() => {\r\n        searchUsers(value);\r\n      }, 300);\r\n    } else {\r\n      setSearchResults([]);\r\n      setShowSuggestions(false);\r\n    }\r\n  };\r\n\r\n  // Handle suggestion selection\r\n  const handleSelectSuggestion = (user) => {\r\n    setNewContactName(user.name);\r\n    setNewContactEmail(user.email);\r\n    setShowSuggestions(false);\r\n    setSearchResults([]);\r\n  };\r\n\r\n  // Click outside handler to close suggestions\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (!event.target.closest('.input-container')) {\r\n        setShowSuggestions(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener('click', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userData = localStorage.getItem('loggedInUser');\r\n    if (userData) {\r\n      const user = JSON.parse(userData);\r\n      setLoggedInUser(user);\r\n      \r\n      // Connect to Socket.IO server\r\n      socketRef.current = io('http://localhost:5000');\r\n      \r\n      // Register user\r\n      socketRef.current.emit('register', {\r\n        userId: user._id,\r\n        name: user.name,\r\n        email: user.email\r\n      });\r\n      \r\n      // Listen for user list updates\r\n      socketRef.current.on('userList', (users) => {\r\n        const filteredUsers = users.filter(u => u.userId !== user._id);\r\n        setContacts(filteredUsers.map(u => ({\r\n          id: u.userId,\r\n          name: u.name,\r\n          email: u.email,\r\n          avatar: '/avatars/default.jpg',\r\n          messages: []\r\n        })));\r\n      });\r\n      \r\n      // Listen for incoming messages\r\n      socketRef.current.on('receiveMessage', ({ from, message, timestamp }) => {\r\n        setContacts(prevContacts => prevContacts.map(contact => {\r\n          if (contact.id === from.userId) {\r\n            return {\r\n              ...contact,\r\n              messages: [...contact.messages, {\r\n                id: Date.now(),\r\n                text: message,\r\n                sender: from.userId,\r\n                timestamp\r\n              }]\r\n            };\r\n          }\r\n          return contact;\r\n        }));\r\n      });\r\n      \r\n      // Listen for sent message confirmation\r\n      socketRef.current.on('messageSent', ({ to, message, timestamp }) => {\r\n        setContacts(prevContacts => prevContacts.map(contact => {\r\n          if (contact.id === to.userId) {\r\n            return {\r\n              ...contact,\r\n              messages: [...contact.messages, {\r\n                id: Date.now(),\r\n                text: message,\r\n                sender: 'me',\r\n                timestamp\r\n              }]\r\n            };\r\n          }\r\n          return contact;\r\n        }));\r\n      });\r\n      \r\n      return () => {\r\n        if (socketRef.current) {\r\n          socketRef.current.disconnect();\r\n        }\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n    }\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('loggedInUser');\r\n    handleSuccess('User Logged out');\r\n    setTimeout(() => {\r\n      navigate('/login');\r\n    }, 1000);\r\n  };\r\n  \r\n  // Get selected contact\r\n  const selectedContact = contacts.find(contact => contact.id === selectedContactId);\r\n  \r\n  // Handle sending a message\r\n  const handleSendMessage = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!messageInput.trim() || !selectedContactId) return;\r\n    \r\n    // Send message through socket\r\n    socketRef.current.emit('sendMessage', {\r\n      to: {\r\n        userId: selectedContactId,\r\n        name: selectedContact.name,\r\n        email: selectedContact.email\r\n      },\r\n      from: {\r\n        userId: loggedInUser._id,\r\n        name: loggedInUser.name,\r\n        email: loggedInUser.email\r\n      },\r\n      message: messageInput\r\n    });\r\n    \r\n    // Clear input\r\n    setMessageInput('');\r\n  };\r\n  \r\n  // Handle adding a new contact\r\n  const handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!newContactEmail.trim() || !newContactName.trim()) {\r\n      alert('Please enter both name and email');\r\n      return;\r\n    }\r\n    \r\n    // Reset form\r\n    setNewContactEmail('');\r\n    setNewContactName('');\r\n    setShowSuggestions(false);\r\n    setShowNewContactForm(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-dashboard-container\">\r\n      <Sidebar onLogout={handleLogout} />\r\n      <div className=\"content-area\">\r\n        <h1>Welcome, {loggedInUser?.name}</h1>\r\n        <div className=\"chat-layout\">\r\n          {/* Contacts List */}\r\n          <div className=\"contacts-panel\">\r\n            <div className=\"contacts-header\">\r\n              <h2>Messages</h2>\r\n              <button \r\n                className=\"add-contact-button\"\r\n                onClick={() => setShowNewContactForm(true)}\r\n              >\r\n                + New Chat\r\n              </button>\r\n            </div>\r\n            \r\n            {/* New Contact Form */}\r\n            {showNewContactForm && (\r\n              <div className=\"new-contact-form\">\r\n                <form onSubmit={handleAddContact}>\r\n                  <div className=\"input-container\">\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"Search by name...\"\r\n                      value={newContactName}\r\n                      onChange={(e) => handleInputChange(e, 'name')}\r\n                      required\r\n                    />\r\n                    {isSearching && <div className=\"search-loading\">Searching...</div>}\r\n                    {showSuggestions && searchResults.length > 0 && (\r\n                      <div className=\"suggestions-list\">\r\n                        {searchResults.map(user => (\r\n                          <div\r\n                            key={user._id}\r\n                            className=\"suggestion-item\"\r\n                            onClick={() => handleSelectSuggestion(user)}\r\n                          >\r\n                            <div className=\"suggestion-name\">{user.name}</div>\r\n                            <div className=\"suggestion-email\">{user.email}</div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                    {showSuggestions && searchResults.length === 0 && !isSearching && (\r\n                      <div className=\"no-results\">No users found</div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"input-container\">\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"Or search by email...\"\r\n                      value={newContactEmail}\r\n                      onChange={(e) => handleInputChange(e, 'email')}\r\n                      required\r\n                    />\r\n                    {isSearching && <div className=\"search-loading\">Searching...</div>}\r\n                    {showSuggestions && searchResults.length > 0 && (\r\n                      <div className=\"suggestions-list\">\r\n                        {searchResults.map(user => (\r\n                          <div\r\n                            key={user._id}\r\n                            className=\"suggestion-item\"\r\n                            onClick={() => handleSelectSuggestion(user)}\r\n                          >\r\n                            <div className=\"suggestion-name\">{user.name}</div>\r\n                            <div className=\"suggestion-email\">{user.email}</div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"form-buttons\">\r\n                    <button type=\"submit\">Add</button>\r\n                    <button \r\n                      type=\"button\" \r\n                      onClick={() => {\r\n                        setShowNewContactForm(false);\r\n                        setShowSuggestions(false);\r\n                        setSearchResults([]);\r\n                        setNewContactName('');\r\n                        setNewContactEmail('');\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            )}\r\n            \r\n            {/* Contacts List */}\r\n            <div className=\"contacts-list\">\r\n              {contacts.map(contact => (\r\n                <div \r\n                  key={contact.id}\r\n                  className={`contact-item ${selectedContactId === contact.id ? 'selected' : ''}`}\r\n                  onClick={() => setSelectedContactId(contact.id)}\r\n                >\r\n                  <div className=\"contact-avatar\">\r\n                    <img src={contact.avatar} alt={contact.name} />\r\n                  </div>\r\n                  <div className=\"contact-info\">\r\n                    <div className=\"contact-name\">{contact.name}</div>\r\n                    <div className=\"contact-email\">{contact.email}</div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Chat Area */}\r\n          <div className=\"chat-area\">\r\n            {selectedContact ? (\r\n              <>\r\n                <div className=\"chat-header\">\r\n                  <div className=\"contact-avatar\">\r\n                    <img src={selectedContact.avatar} alt={selectedContact.name} />\r\n                  </div>\r\n                  <div className=\"contact-info\">\r\n                    <div className=\"contact-name\">{selectedContact.name}</div>\r\n                    <div className=\"contact-email\">{selectedContact.email}</div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"messages-container\">\r\n                  {selectedContact.messages.length > 0 ? (\r\n                    selectedContact.messages.map(message => (\r\n                      <div \r\n                        key={message.id}\r\n                        className={`message ${message.sender === 'me' ? 'sent' : 'received'}`}\r\n                      >\r\n                        <div className=\"message-bubble\">\r\n                          {message.text}\r\n                        </div>\r\n                        <div className=\"message-time\">\r\n                          {new Date(message.timestamp).toLocaleTimeString([], {\r\n                            hour: '2-digit',\r\n                            minute: '2-digit'\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <div className=\"no-messages\">\r\n                      Start a conversation with {selectedContact.name}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                \r\n                <form className=\"message-input-form\" onSubmit={handleSendMessage}>\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Type a message...\"\r\n                    value={messageInput}\r\n                    onChange={(e) => setMessageInput(e.target.value)}\r\n                  />\r\n                  <button type=\"submit\">Send</button>\r\n                </form>\r\n              </>\r\n            ) : (\r\n              <div className=\"no-contact-selected\">\r\n                <div className=\"placeholder-message\">\r\n                  Select a contact to start chatting\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SDiscussions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}